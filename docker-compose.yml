version: '3.8'

x-common-env: &common-env
  REDIS_URL: ${REDIS_URL:-redis://redis:6379}
  CELERY_BROKER_URL: ${CELERY_BROKER_URL:-redis://redis:6379/0}
  CELERY_RESULT_BACKEND: ${CELERY_RESULT_BACKEND:-redis://redis:6379/1}

x-app-service: &app-service
  image: ecommerce-crawler:${BUILD_TARGET:-development}
  build:
    context: .
    dockerfile: Dockerfile
    target: ${BUILD_TARGET:-development}
    cache_from:
      - ecommerce-crawler:${BUILD_TARGET:-development}
      - ecommerce-crawler:base
  environment:
    <<: *common-env
  volumes:
    - ./data:/app/data
    - ./logs:/app/logs
  depends_on:
    redis:
      condition: service_healthy
  restart: ${RESTART_POLICY:-no}

services:
  redis:
    image: redis:7-alpine
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
      - ./config/redis.conf:/usr/local/etc/redis/redis.conf:ro
    command: redis-server ${REDIS_CONFIG:-} --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: ${HEALTHCHECK_INTERVAL:-10s}
      timeout: 5s
      retries: 5
    restart: ${RESTART_POLICY:-no}
    profiles: ["dev", "prod", "test"]

  api:
    <<: *app-service
    ports:
      - "${API_PORT:-8000}:8000"
    command: ${API_CMD:-uvicorn src.api.main:app --host 0.0.0.0 --port 8000 --reload}
    profiles: ["dev", "prod"]
    deploy:
      replicas: ${API_REPLICAS:-1}
      resources:
        limits:
          cpus: ${API_CPU_LIMIT:-2}
          memory: ${API_MEM_LIMIT:-1G}
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
      - ./src:/app/src  # Dev only - for hot reload
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: ${HEALTHCHECK_INTERVAL:-30s}
      timeout: 10s
      retries: 3

  worker:
    <<: *app-service
    command: celery -A src.workers.celery_app worker --loglevel=${LOG_LEVEL:-info} --concurrency=${WORKER_CONCURRENCY:-4} -Q crawl_high,crawl_default,crawl_low
    profiles: ["dev", "prod"]
    deploy:
      replicas: ${WORKER_REPLICAS:-2}
      resources:
        limits:
          cpus: ${WORKER_CPU_LIMIT:-2}
          memory: ${WORKER_MEM_LIMIT:-1G}

  log_worker:
    <<: *app-service
    command: celery -A src.workers.celery_app worker --loglevel=${LOG_LEVEL:-info} --concurrency=${LOG_WORKER_CONCURRENCY:-2} -Q logs
    profiles: ["dev", "prod"]
    deploy:
      replicas: ${LOG_WORKER_REPLICAS:-1}
      resources:
        limits:
          cpus: ${LOG_WORKER_CPU_LIMIT:-1}
          memory: ${LOG_WORKER_MEM_LIMIT:-512M}

  beat:
    <<: *app-service
    command: celery -A src.workers.celery_app beat --loglevel=${LOG_LEVEL:-info}
    profiles: ["dev", "prod"]

  flower:
    <<: *app-service
    ports:
      - "${FLOWER_PORT:-5555}:5555"
    command: celery -A src.workers.celery_app flower --port=5555 ${FLOWER_AUTH:+--basic_auth=$FLOWER_AUTH}
    profiles: ["dev", "prod", "monitor"]

  # Production-only services
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./config/nginx.conf:/etc/nginx/nginx.conf:ro
      - nginx_cache:/var/cache/nginx
    depends_on:
      - api
    restart: ${RESTART_POLICY:-no}
    profiles: ["prod"]

volumes:
  redis_data:
  nginx_cache: